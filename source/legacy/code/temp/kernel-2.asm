org 500h

mov ah, 00h ; Функция выбора видеорежима
mov al, 13h ; Номер видеорежима
int 10h

main_loop:
    call draw_sphere      ; Рендеринг сферы
    jmp main_loop         ; Бесконечный цикл

; Функция отрисовки сферы
draw_sphere:
    mov cx, 0                 ; Угол по оси X
draw_x:
    mov dx, 0                 ; Угол по оси Y
draw_y:
    ; Вычисление координат (x, y, z) для сферы
    ; Используем статические значения для упрощения
    ; Примерный рендеринг

    push dx                   ; Сохраняем угол Y
    call calculate_coordinates ; Расчет координат
    pop dx                    ; Восстанавливаем угол Y

    ; Установка пикселя
    call set_pixel

    add dx, 1                 ; Увеличиваем угол Y
    cmp dx, 360
    jl draw_y

    add cx, 1                 ; Увеличиваем угол X
    cmp cx, 360
    jl draw_x

    ret

; Функция расчета координат
calculate_coordinates:
    ; Для простоты можно просто задать фиксированные координаты
    ; Пример: фиксированные координаты для тестирования
    mov bx, 100              ; Радиус
    ; В данном месте должны быть формулы для вычисления X, Y, Z
    ; x = R * cos(phi) * sin(theta)
    ; y = R * sin(phi) * sin(theta)
    ; z = R * cos(theta)
    ret

; Функция установки пикселя
set_pixel:
    ; Установка пикселя на заданных координатах
    ; Здесь также нужно вычислить цвет на основе координат
    mov ax, 0xA000           ; Указываем сегмент для графического режима
    ; Пример простого задания цвета
    mov al, 0x0C        ; Устанавливаем цвет (например, красный)
    push ax              ; сохраняем AX в стек
    mov cx, 320          ; ширина экрана
    mul dx               ; умножаем Y на ширину экрана
    add ax, bx           ; добавляем X
    mov di, ax           ; сохраняем адрес в DI
    pop ax               ; возвращаем AX из стека

    mov [es:di], al      ; устанавливаем пиксель
    ret